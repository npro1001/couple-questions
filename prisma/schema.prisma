// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

// model User {
//   id             String   @id @default(auto()) @map("_id") @db.ObjectId
//   name           String
//   email          String   @unique
//   hashedPassword String
//   qCoins         Int      @default(10)
//   qSkips         Int      @default(5)
//   interests      String[] @default([])
//   activeGame     Game?    @relation() // Only specify @relation here without fields and references
//   activeGameId   String?  @db.ObjectId
//   updatedAt      DateTime @updatedAt
//   createdAt      DateTime @default(now())
// }

// model Game {
//   id             String   @id @default(auto()) @map("_id") @db.ObjectId
//   host           User     @relation(fields: [hostId], references: [id]) // Specify fields and references here
//   hostId         String   @unique @db.ObjectId // Ensure hostId is marked as unique
//   participantIds String[] @db.ObjectId
//   updatedAt      DateTime @updatedAt
//   createdAt      DateTime @default(now())
// }

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String   @unique
  hashedPassword String
  qCoins         Int      @default(10)
  qSkips         Int      @default(5)
  interests      String[] @default([])
  activeGame     Game?    @relation // Remove fields and references here
  activeGameId   String?  @db.ObjectId
  updatedAt      DateTime @updatedAt
  createdAt      DateTime @default(now())
}

model Game {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  host            User?    @relation(fields: [hostId], references: [id]) // Specify fields and references here
  hostId          String?  @unique @db.ObjectId
  participantIds  String[] @db.ObjectId
  status          String   @default("LOBBY") // Possible values: 'LOBBY', 'ACTIVE', 'INACTIVE'
  currentQuestion String   @default("")
  questionTypes   String[] @default(["getToKnowEachother"])
  pocketLevel     Int      @default(3)
  updatedAt       DateTime @updatedAt
  createdAt       DateTime @default(now())
}
